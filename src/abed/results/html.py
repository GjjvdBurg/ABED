"""
Generate the HTML needed to display a table as a datatable

"""

import datetime
import dominate
import os
import shutil

import abed

from dominate import tags
from abed import settings
from abed.utils import mkdir

def get_data_path(filepath):
    packagedir = abed.__path__[0]
    dirname = os.path.join(os.path.dirname(packagedir), 'share', 'data')
    fullname = os.path.join(dirname, filepath)
    fullpath = os.path.abspath(fullname)
    return fullpath

def copy_data_file(filepath):
    src = get_data_path(filepath)
    datapath = os.path.join('assets', filepath)
    dest = os.path.join(settings.OUTPUT_DIR, 'html', datapath)
    destdir = os.path.dirname(dest)
    mkdir(destdir)
    shutil.copy(src, dest)
    return datapath

def copy_auxiliary_files():
    copy_data_file('DataTables-1.10.7/media/images/favicon.ico')
    copy_data_file('DataTables-1.10.7/media/images/sort_both.png')
    copy_data_file('DataTables-1.10.7/media/images/sort_asc.png')
    copy_data_file('DataTables-1.10.7/media/images/sort_asc_disabled.png')
    copy_data_file('DataTables-1.10.7/media/images/sort_desc.png')
    copy_data_file('DataTables-1.10.7/media/images/sort_desc_disabled.png')
    copy_data_file('DataTables-1.10.7/media/images/Sorting icons.psd')

def generate_html(table):
    summary_table = table.summary_table()
    summary_table.name = '%s_summary' % table.name
    copy_auxiliary_files()
    doc = dominate.document(title='ABED results for %s' % settings.PROJECT_NAME)
    with doc.head:
        # DataTables CSS
        tags.link(rel='stylesheet', href=copy_data_file(
                    'DataTables-1.10.7/media/css/jquery.dataTables.css'))

        # jQuery
        tags.script(type='text/javascript', 
                src=copy_data_file('DataTables-1.10.7/media/js/jquery.js'))

        # DataTables js
        tags.script(type='text/javascript', 
                src=copy_data_file(
                    'DataTables-1.10.7/media/js/jquery.dataTables.js'))

        # FixedHeader js
        tags.script(type='text/javascript', src=copy_data_file(
            ('DataTables-1.10.7/extensions/FixedHeader/'
                'js/dataTables.fixedHeader.js')))

        # FixedHeader CSS
        tags.link(rel='stylesheet', href=copy_data_file(
            ('DataTables-1.10.7/extensions/FixedHeader/'
                'css/dataTables.fixedHeader.css')))

        # Initializer
        js = tags.script(type='text/javascript', cls='init')
        js.add_raw_string(
                r"""

$(document).ready(function() {
    var t1 = $('table.display').eq(0).DataTable();
    new $.fn.dataTable.FixedHeader( t1, {
        bottom: true
    } );

    var t2 = $('table.display').eq(1).DataTable(
        {
            "paging": false,
            "info": false
        }
        );
    new $.fn.dataTable.FixedHeader( t2, {
        bottom: true
    } );
} );

"""
)

    now = datetime.datetime.now()
    with doc:
        with tags.div(id='content'):
            tags.attr(cls='body')
            tags.p('Result file generated by ABED at %s' % now.strftime('%c'))
            tags.p('Table for label %s' % table.target)
            tags.p('Showing: %s' % table.type)
            if table.is_metric:
                tags.p('Metric: %s' % table.name)
            tab = tags.table(id=table.name, _class='display', cellspacing='0', 
                    width='90%')
            with tab.add(tags.thead()):
                l = tags.tr()
                for head in table.headers:
                    l += tags.td(head)
            with tab.add(tags.tfoot()):
                l = tags.tr()
                for head in table.headers:
                    l += tags.td(head)
            with tab.add(tags.tbody()):
                for _id, row in table:
                    l = tags.tr()
                    l += tags.td(_id)
                    for elem in row:
                        l += tags.td(elem)
            tags.p('Summary table')
            tab = tags.table(id=summary_table.name, _class='display', 
                    cellspacing='0', width='90%')
            with tab.add(tags.thead()):
                l = tags.tr()
                for head in summary_table.headers:
                    l += tags.td(head)
            with tab.add(tags.tfoot()):
                l = tags.tr()
                for head in summary_table.headers:
                    l += tags.td(head)
            with tab.add(tags.tbody()):
                for _id, row in summary_table:
                    l = tags.tr()
                    l += tags.td(_id)
                    for elem in row:
                        l += tags.td(elem)
 
    return str(doc)
